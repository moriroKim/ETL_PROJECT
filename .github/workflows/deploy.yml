name: Deploy to EC2

on:
  push:
    branches: [main] # main 브랜치에 푸시될 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install putty-tools
        run: |
          sudo apt-get update
          sudo apt-get install -y putty-tools

      - name: Create SSH directory
        run: mkdir -p ~/.ssh/

      - name: Convert PPK to PEM and Store SSH key
        run: |
          # PPK를 PEM으로 변환
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/temp.ppk
          puttygen ~/.ssh/temp.ppk -O private-openssh -o ~/.ssh/deploy_key
          rm ~/.ssh/temp.ppk
          chmod 600 ~/.ssh/deploy_key

          # SSH 설정
          echo "Host ec2" >> ~/.ssh/config
          echo "  HostName ${{ secrets.AWS_HOST }}" >> ~/.ssh/config
          echo "  User ${{ secrets.AWS_USERNAME }}" >> ~/.ssh/config
          echo "  IdentityFile ~/.ssh/deploy_key" >> ~/.ssh/config
          echo "  StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Deploy to EC2
        run: |
          # 프로젝트 및 스크립트 전송
          scp -r ./* ec2:~/etl_project/

          # 실행 스크립트에 권한 부여 및 실행
          ssh ec2 '
            chmod +x ~/etl_project/ec2_deploy.sh
            chmod +x ~/etl_project/run_etl.sh

            export LOCAL_DB_HOST="${{ secrets.LOCAL_DB_HOST }}"
            export LOCAL_DB_PORT="${{ secrets.LOCAL_DB_PORT }}"
            export LOCAL_DB_USER="${{ secrets.LOCAL_DB_USER }}"
            export LOCAL_DB_PASSWORD="${{ secrets.LOCAL_DB_PASSWORD }}"
            export LOCAL_DB_NAME="${{ secrets.LOCAL_DB_NAME }}"

            export AWS_DB_HOST="${{ secrets.AWS_DB_HOST }}"
            export AWS_DB_PORT="${{ secrets.AWS_DB_PORT }}"
            export AWS_DB_USER="${{ secrets.AWS_DB_USER }}"
            export AWS_DB_PASSWORD="${{ secrets.AWS_DB_PASSWORD }}"
            export AWS_DB_NAME="${{ secrets.AWS_DB_NAME }}"

            ~/etl_project/ec2_deploy.sh
          '
